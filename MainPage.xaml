<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:local="clr-namespace:IKSAssistApp"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="IKSAssistApp.MainPage"
             Title="IKS Assist">
    
    <ContentPage.BindingContext>
        <local:MainPageViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <DataTemplate x:Key="InformationMessageTemplate">
            <Label x:DataType="local:OutputMessage" Text="{Binding Text}" FontSize="18" TextColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                </Label.GestureRecognizers>
            </Label>
        </DataTemplate>
        <DataTemplate x:Key="ChatMessageSelfMessageTemplate">
            <Label x:DataType="local:OutputMessage" Text="{Binding Text}" FontSize="18" TextColor="#3399FF" HorizontalOptions="End">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                </Label.GestureRecognizers>
            </Label>
        </DataTemplate>
        <DataTemplate x:Key="ChatMessageBotMessageTemplate">
            <Label x:DataType="local:OutputMessage" Text="{Binding Text}" FontSize="18" TextColor="#19BA00">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                </Label.GestureRecognizers>
            </Label>
        </DataTemplate>
        <DataTemplate x:Key="ErrorMessageTemplate">
            <Label x:DataType="local:OutputMessage" Text="{Binding Text}" FontSize="18" TextColor="#FF0026">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                </Label.GestureRecognizers>
            </Label>
        </DataTemplate>

        <local:OutputMessageTemplateSelector x:Key="OutputMessageTemplateSelector"
                                             InformationMessageTemplate="{StaticResource InformationMessageTemplate}"
                                             ChatMessageSelfMessageTemplate="{StaticResource ChatMessageSelfMessageTemplate}"
                                             ChatMessageBotMessageTemplate="{StaticResource ChatMessageBotMessageTemplate}"
                                             ErrorMessageTemplate="{StaticResource ErrorMessageTemplate}" />
    </ContentPage.Resources>

    <Grid Margin="20" RowSpacing="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackLayout Grid.Row="0" Spacing="20">
            <Picker
                x:DataType="local:MainPageViewModel"
                ItemsSource="{Binding Model.LanguageVoiceItems}"
                ItemDisplayBinding="{Binding LanguageNameAndVoice}"
                SelectedItem="{Binding SelectedLanguageVoiceItem}"
                IsEnabled="{Binding IsReady}">
                <Picker.Behaviors>
                    <toolkit:EventToCommandBehavior
                        EventName="SelectedIndexChanged"
                        Command="{Binding SaveCommand}"
                        CommandParameter="LanguageVoiceItem" />
                </Picker.Behaviors>
            </Picker>
            <Picker
                x:DataType="local:MainPageViewModel"
                ItemsSource="{Binding Model.Moods}"
                SelectedItem="{Binding SelectedMood}"
                IsEnabled="{Binding IsReady}">
                <Picker.Behaviors>
                    <toolkit:EventToCommandBehavior
                        EventName="SelectedIndexChanged"
                        Command="{Binding SaveCommand}"
                        CommandParameter="Mood" />
                </Picker.Behaviors>
            </Picker>
            <Entry
                x:DataType="local:MainPageViewModel"
                Text="{Binding InputText}"
                Placeholder="Text"
                MaxLength="10000"
                Keyboard="Text"
                IsSpellCheckEnabled="False"
                IsTextPredictionEnabled="False"
                ReturnCommand="{Binding SendCommand}"
                IsEnabled="{Binding IsReady}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button
                    x:DataType="local:MainPageViewModel"
                    Grid.Column="0"
                    Text="Speak"
                    Margin="4"
                    Command="{Binding SpeakCommand}"
                    IsEnabled="{Binding IsReady}" />
                <Button
                    x:DataType="local:MainPageViewModel"
                    Grid.Column="1"
                    Text="Send"
                    Margin="4"
                    Command="{Binding SendCommand}"
                    IsEnabled="{Binding IsReady}" />
                <Button
                    Grid.Column="2"
                    Text="Close"
					Margin="4"
                    Clicked="BtnClose_Clicked" />
            </Grid>
        </StackLayout>
        <ScrollView
            Grid.Row="1"
            x:Name="scvMain"
            VerticalOptions="Fill">
            <StackLayout
                x:DataType="local:MainPageViewModel"
                x:Name="stlMain"
                Spacing="10"
                BindableLayout.ItemsSource="{Binding OutputMessages}"
                BindableLayout.ItemTemplateSelector="{StaticResource OutputMessageTemplateSelector}" />
        </ScrollView>
        <AbsoluteLayout
            Grid.Row="2"
            HorizontalOptions="Center"
            VerticalOptions="Center">
            <ActivityIndicator
                x:DataType="local:MainPageViewModel"
                WidthRequest="25"
                HeightRequest="25"
                HorizontalOptions="Center"
                VerticalOptions="Start"
                Color="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Secondary}}"
                IsVisible="{Binding IsBusy}"
                IsRunning="{Binding IsBusy}" />
        </AbsoluteLayout>
    </Grid>

</ContentPage>
